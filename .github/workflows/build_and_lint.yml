name: Build and Lint

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  # Run a basic lint on the entire codebase
  lint:
    # Name the Job
    name: Lint code base
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      # Note: Entire git history is needed for super-linter to work correctly
      - name: Checkout code
        uses: actions/checkout@v2

      # Runs the Super-Linter action
      - name: Run Super-Linter
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          LINTER_RULES_PATH: /
          TYPESCRIPT_ES_CONFIG_FILE: .eslintrc.js
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.js

  # Build the codebase, making the compiled code available as an artifact
  # TODO: add testing
  build:
    name: Build code base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      # Install dependencies
      - name: Install
        run: yarn install --frozen-lockfile

      # Compile the source code
      - name: Build
        run: yarn build

      # Make the build code downloadable
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cmsc435-discord-bot
          path: dist/**
          retention-days: 1
